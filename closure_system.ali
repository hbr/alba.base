use
    partial_order
end


PO: PARTIAL_ORDER

above (p:{PO}, a:PO): {PO}
        -- The set of elements of 'p' which are above 'a'.
    -> {x: p(x) and a <= x}

is_closure_system (p:{PO}):  ghost BOOLEAN
        -- Are the elements of the set 'p' a closure system, i.e. does it have
        -- sufficiently large elements and do all nonempty subsets of 'p' have
        -- an infimum in 'p'?
    -> (all(a) p.above(a) /= empty) and
       all(q) q <= p  ==> q /= empty ==> (some(x) x.is_infimum(q)) and *q in p


closed (a:PO, p:{PO}): ghost PO
        -- The least element of 'p' above 'a'.
    require
        p.is_closure_system
    ensure
        -> least(p.above(a))
    end


all(a,b:PO, p:{PO})
    require
        p.is_closure_system
    ensure                                       -- closure is:
        a <= a.closed(p)                         -- ascending
        a <= b  ==>  a.closed(p) <= b.closed(p)  -- monotonic
        a.closed(p) <= a.closed(p).closed(p)     -- idempotent
    end